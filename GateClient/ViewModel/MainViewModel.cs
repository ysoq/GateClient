using CommunityToolkit.Mvvm.ComponentModel;
using CommunityToolkit.Mvvm.Input;
using System;
using System.Collections.Generic;
using System.Windows.Media;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using CodeCore;
using CodeCore.Impl;
using GateClient.Dto;
using GateClient.Messager;
using CommunityToolkit.Mvvm.Messaging;
using Newtonsoft.Json.Linq;
using CodeCore.ProwayGate;
using System.Reflection.Metadata;
using Newtonsoft.Json;

namespace GateClient.ViewModel
{
    public partial class MainViewModel : ObservableObject
    {

        [ObservableProperty]
        private string? title;

        [ObservableProperty]
        private string? leftTopText;

        [ObservableProperty]
        private string? rightBottomText;

        [ObservableProperty]
        private Color? startBg;

        [ObservableProperty]
        private Color? endBg;

        [ObservableProperty]
        private Brush? themeBg;

        [ObservableProperty]
        private bool iconRunning;

        [ObservableProperty]
        private Geometry? themeIcon;
        private readonly Appsettings appsettings;
        private readonly GateUtil gateUtil;
        private readonly ILogger logger;
        private readonly IQrUtil qrUtil;
        private readonly ICertUtil certUtil;
        private readonly string? GateCode;
        private readonly string? GatePassword;

        public MainViewModel(Appsettings appsettings,
                             GateUtil gateUtil,
                             ILogger logger,
                             IQrUtil qrUtil,
                             ICertUtil certUtil)
        {
            this.appsettings = appsettings;
            this.gateUtil = gateUtil;
            this.logger = logger;
            this.qrUtil = qrUtil;
            this.certUtil = certUtil;
            GateCode = appsettings.Node("account").Value<string>("code");
            GatePassword = appsettings.Node("account").Value<string>("password");

            InitPage();

        }

        #region 初始化系统
        private void InitPage()
        {
            Title = "系统初始化";
            CurrPageCode = PageCode.Init;
            LeftTopText = "";
            StartBg = Util.ToColor("#E4F2F7");
            EndBg = Util.ToColor("#7CDCD7");
            ThemeBg = Util.ToBrush("#42CFC5");
            IconRunning = true;
            ThemeIcon = Geometry.Parse("M104.384 130.207L72.4425 98.2566C72.3901 98.2046 72.3362 98.1537 72.2815 98.1043C72.2265 98.0549 72.1703 98.0067 72.1134 97.9599C72.0561 97.9136 71.9977 97.8683 71.9381 97.8242C71.8785 97.7805 71.8178 97.7383 71.7564 97.6972C71.695 97.6561 71.6324 97.6169 71.5691 97.5792C71.5054 97.5415 71.4413 97.5053 71.3761 97.4706C71.3108 97.436 71.2445 97.4028 71.1778 97.3715C71.1111 97.3402 71.0432 97.3104 70.975 97.2822C70.9068 97.2539 70.8378 97.2275 70.768 97.203C70.6983 97.1781 70.6282 97.1551 70.5573 97.1336C70.4868 97.1125 70.4156 97.0929 70.3436 97.0752C70.272 97.0575 70.2 97.0413 70.1272 97.027C70.0548 97.0126 69.9821 97.0002 69.909 96.9897C69.8358 96.9787 69.7623 96.97 69.6888 96.9629C69.6153 96.9557 69.5418 96.9501 69.4679 96.9467C69.394 96.9433 69.3202 96.9418 69.2463 96.9418C69.1724 96.9418 69.0985 96.9437 69.025 96.9474C68.9511 96.9512 68.8772 96.9569 68.8037 96.964C68.7302 96.9712 68.6571 96.9806 68.584 96.9915C68.5108 97.0025 68.4381 97.0149 68.3657 97.0296C68.2933 97.0443 68.2213 97.0605 68.1493 97.0782C68.0777 97.0963 68.0065 97.1163 67.936 97.1378C67.8655 97.1593 67.7954 97.1823 67.7256 97.2072C67.6559 97.2324 67.5873 97.2588 67.5191 97.2871C67.4508 97.3153 67.383 97.3455 67.3163 97.3772C67.2495 97.4088 67.1836 97.442 67.1184 97.4767C67.0532 97.5117 66.9891 97.5479 66.9258 97.586C66.8624 97.6241 66.7999 97.6636 66.7384 97.7047C66.677 97.7458 66.6166 97.788 66.5575 97.8321C66.4979 97.8762 66.4395 97.9215 66.3826 97.9686C66.3256 98.0153 66.2695 98.0636 66.2148 98.1133C66.1602 98.1627 66.1066 98.2136 66.0542 98.266L59.666 104.654C59.6136 104.707 59.5627 104.76 59.513 104.815C59.4636 104.869 59.4153 104.926 59.3682 104.983C59.3211 105.04 59.2759 105.098 59.2318 105.157C59.1877 105.217 59.1451 105.277 59.104 105.339C59.0629 105.4 59.0233 105.462 58.9852 105.526C58.9472 105.589 58.911 105.654 58.8759 105.719C58.8412 105.784 58.8081 105.85 58.7764 105.917C58.7447 105.984 58.7146 106.051 58.6863 106.119C58.658 106.188 58.6317 106.257 58.6068 106.326C58.5815 106.396 58.5585 106.466 58.537 106.537C58.5155 106.608 58.4959 106.679 58.4779 106.751C58.4601 106.822 58.4439 106.894 58.4292 106.967C58.4149 107.04 58.4025 107.112 58.3915 107.185C58.3806 107.259 58.3716 107.332 58.3644 107.406C58.3572 107.479 58.3516 107.553 58.3478 107.627C58.3444 107.7 58.3425 107.774 58.3425 107.848C58.3425 107.922 58.3444 107.996 58.3478 108.07C58.3516 108.144 58.3572 108.218 58.3644 108.291C58.3716 108.365 58.3806 108.438 58.3915 108.511C58.4025 108.584 58.4149 108.657 58.4292 108.729C58.4439 108.802 58.4601 108.874 58.4779 108.946C58.4959 109.018 58.5155 109.089 58.537 109.16C58.5585 109.23 58.5815 109.301 58.6068 109.37C58.6317 109.44 58.658 109.509 58.6863 109.577C58.7146 109.645 58.7447 109.713 58.7764 109.78C58.8081 109.846 58.8412 109.913 58.8759 109.978C58.911 110.043 58.9472 110.107 58.9852 110.171C59.0233 110.234 59.0629 110.296 59.104 110.358C59.1451 110.419 59.1877 110.48 59.2318 110.539C59.2759 110.598 59.3211 110.657 59.3682 110.714C59.4153 110.771 59.4636 110.827 59.513 110.882C59.5627 110.937 59.6136 110.99 59.666 111.042L83.7232 135.1L59.666 159.157C59.6136 159.21 59.5627 159.263 59.513 159.318C59.4636 159.372 59.4153 159.429 59.3682 159.485C59.3211 159.543 59.2759 159.601 59.2318 159.66C59.1877 159.72 59.1451 159.78 59.104 159.842C59.0629 159.903 59.0233 159.965 58.9852 160.029C58.9472 160.092 58.911 160.156 58.8759 160.222C58.8409 160.287 58.8077 160.353 58.776 160.42C58.7447 160.487 58.7146 160.554 58.6863 160.623C58.658 160.691 58.6313 160.76 58.6064 160.829C58.5815 160.899 58.5585 160.969 58.537 161.04C58.5155 161.11 58.4956 161.182 58.4779 161.254C58.4598 161.325 58.4436 161.397 58.4292 161.47C58.4145 161.542 58.4021 161.615 58.3912 161.688C58.3802 161.762 58.3712 161.835 58.364 161.908C58.3569 161.982 58.3512 162.056 58.3478 162.13C58.344 162.204 58.3422 162.278 58.3422 162.351C58.3422 162.425 58.344 162.499 58.3478 162.573C58.3512 162.647 58.3569 162.721 58.364 162.794C58.3712 162.868 58.3802 162.941 58.3912 163.014C58.4021 163.088 58.4145 163.16 58.4292 163.233C58.4436 163.305 58.4598 163.377 58.4779 163.449C58.4956 163.521 58.5155 163.592 58.537 163.663C58.5585 163.734 58.5815 163.804 58.6064 163.874C58.6313 163.943 58.658 164.012 58.6863 164.08C58.7146 164.148 58.7447 164.216 58.776 164.283C58.8077 164.35 58.8409 164.416 58.8759 164.481C58.911 164.546 58.9472 164.611 58.9852 164.674C59.0233 164.738 59.0629 164.8 59.104 164.861C59.1451 164.923 59.1877 164.983 59.2318 165.042C59.2759 165.102 59.3211 165.16 59.3682 165.217C59.4153 165.274 59.4636 165.33 59.513 165.385C59.5627 165.44 59.6136 165.493 59.666 165.546L66.0542 171.934C66.1066 171.986 66.1602 172.037 66.2148 172.087C66.2695 172.136 66.3256 172.185 66.3826 172.232C66.4399 172.279 66.4983 172.324 66.5575 172.368C66.6166 172.412 66.6773 172.455 66.7388 172.496C66.8002 172.537 66.8624 172.577 66.9261 172.615C66.9895 172.653 67.0535 172.689 67.1188 172.724C67.184 172.759 67.2503 172.792 67.317 172.824C67.3838 172.855 67.4512 172.885 67.5194 172.914C67.5877 172.942 67.6567 172.968 67.7264 172.993C67.7961 173.018 67.8662 173.041 67.9371 173.063C68.0076 173.084 68.0788 173.104 68.1508 173.122C68.2225 173.14 68.2945 173.156 68.3672 173.171C68.4396 173.185 68.5123 173.197 68.5855 173.208C68.6586 173.219 68.7321 173.228 68.8056 173.236C68.8791 173.243 68.953 173.248 69.0265 173.252C69.1004 173.256 69.1743 173.257 69.2485 173.257C69.3224 173.257 69.3963 173.256 69.4702 173.252C69.5437 173.248 69.6176 173.243 69.6911 173.236C69.7646 173.228 69.8381 173.219 69.9112 173.208C69.9843 173.197 70.0571 173.185 70.1299 173.171C70.2022 173.156 70.2742 173.14 70.3458 173.122C70.4178 173.104 70.4891 173.084 70.5596 173.063C70.6304 173.041 70.7006 173.018 70.7703 172.993C70.84 172.968 70.909 172.942 70.9772 172.914C71.0455 172.885 71.1129 172.855 71.1797 172.824C71.2464 172.792 71.3127 172.759 71.3779 172.724C71.4432 172.689 71.5072 172.653 71.5706 172.615C71.6343 172.577 71.6965 172.537 71.7579 172.496C71.8194 172.455 71.88 172.412 71.9392 172.368C71.9984 172.324 72.0568 172.279 72.1141 172.232C72.1711 172.185 72.2272 172.136 72.2819 172.087C72.3365 172.037 72.3901 171.986 72.4425 171.934L104.384 139.983C104.462 139.905 104.536 139.824 104.608 139.741C104.68 139.657 104.749 139.571 104.814 139.482C104.88 139.394 104.942 139.303 105.001 139.21C105.061 139.117 105.116 139.022 105.168 138.925C105.22 138.828 105.268 138.729 105.313 138.628C105.358 138.527 105.399 138.425 105.437 138.321C105.474 138.218 105.508 138.113 105.537 138.007C105.567 137.901 105.593 137.794 105.615 137.685C105.637 137.578 105.655 137.469 105.669 137.36C105.683 137.25 105.693 137.141 105.699 137.031C105.705 136.921 105.707 136.811 105.705 136.701C105.703 136.59 105.697 136.48 105.687 136.371C105.677 136.261 105.663 136.152 105.645 136.043C105.627 135.934 105.605 135.826 105.579 135.719C105.553 135.612 105.523 135.506 105.49 135.401C105.456 135.296 105.419 135.192 105.378 135.09C105.419 134.988 105.457 134.885 105.49 134.78C105.524 134.675 105.553 134.569 105.579 134.463C105.605 134.355 105.627 134.248 105.645 134.139C105.663 134.031 105.677 133.922 105.687 133.812C105.697 133.703 105.703 133.593 105.706 133.483C105.707 133.373 105.706 133.263 105.7 133.153C105.693 133.043 105.683 132.934 105.669 132.825C105.655 132.716 105.637 132.607 105.615 132.499C105.593 132.392 105.568 132.285 105.538 132.179C105.508 132.073 105.474 131.968 105.437 131.865C105.4 131.761 105.358 131.66 105.314 131.559C105.269 131.458 105.22 131.36 105.168 131.263C105.116 131.166 105.061 131.071 105.002 130.978C104.943 130.885 104.88 130.795 104.815 130.707C104.749 130.618 104.681 130.532 104.609 130.449C104.537 130.366 104.462 130.286 104.384 130.207L104.384 130.207ZM328.1 48.25L57.9 48.25C56.9523 48.25 56.0054 48.2732 55.0589 48.3197C54.1124 48.3662 53.1677 48.436 52.225 48.5289C51.2818 48.6217 50.3417 48.7375 49.4042 48.8765C48.4667 49.0157 47.5334 49.1777 46.6042 49.3624C45.675 49.5473 44.7507 49.7549 43.8313 49.9851C42.9123 50.2153 41.9994 50.468 41.0924 50.7432C40.1858 51.0183 39.2864 51.3155 38.3942 51.6347C37.5019 51.9538 36.6181 52.2947 35.7426 52.6573C34.8672 53.02 34.0012 53.4038 33.1446 53.8089C32.2879 54.214 31.4418 54.64 30.6061 55.0868C29.7704 55.5334 28.9462 56.0003 28.1334 56.4876C27.3207 56.9746 26.5203 57.4813 25.7325 58.0078C24.9446 58.5343 24.1701 59.0797 23.409 59.6442C22.6479 60.2088 21.9011 60.7917 21.1686 61.3928C20.4361 61.994 19.7188 62.6127 19.0168 63.249C18.3146 63.8853 17.6285 64.5384 16.9585 65.2084C16.2885 65.8786 15.6353 66.5648 14.9989 67.2669C14.3626 67.9688 13.7438 68.686 13.1427 69.4185C12.5416 70.1511 11.9588 70.898 11.3943 71.6592C10.8298 72.4201 10.2843 73.1945 9.75792 73.9823C9.23147 74.7704 8.72465 75.5708 8.23752 76.3835C7.75038 77.1962 7.28345 78.0204 6.83676 78.8559C6.39007 79.6918 5.96415 80.538 5.559 81.3947C5.15389 82.2512 4.77 83.1171 4.40737 83.9927C4.04474 84.868 3.70382 85.7518 3.3846 86.6442C3.06537 87.5364 2.76822 88.4358 2.49316 89.3424C2.21809 90.2493 1.96543 91.1623 1.73519 92.0813C1.50495 93.0007 1.29739 93.925 1.11253 94.8542C0.92767 95.7834 0.76572 96.7167 0.626681 97.6542C0.487642 98.5917 0.371684 99.5318 0.278804 100.475C0.185926 101.418 0.116238 102.362 0.0697431 103.309C0.0232477 104.255 0 105.202 0 106.15L0 279.85C4.51842e-07 280.798 0.0232485 281.745 0.0697442 282.691C0.11624 283.638 0.185928 284.582 0.278807 285.525C0.371685 286.468 0.487645 287.408 0.626684 288.346C0.765724 289.283 0.927674 290.217 1.11254 291.146C1.2974 292.075 1.50495 292.999 1.73519 293.919C1.96544 294.838 2.21809 295.751 2.49316 296.658C2.76823 297.564 3.06537 298.464 3.3846 299.356C3.70385 300.248 4.04478 301.132 4.40737 302.007C4.77 302.883 5.15389 303.749 5.55904 304.605C5.96415 305.462 6.39007 306.308 6.83676 307.144C7.28345 307.98 7.75038 308.804 8.23752 309.616C8.72465 310.429 9.23147 311.229 9.75792 312.018C10.2844 312.805 10.8298 313.58 11.3943 314.341C11.9588 315.102 12.5416 315.849 13.1427 316.581C13.7438 317.314 14.3626 318.031 14.9989 318.733C15.6353 319.435 16.2885 320.121 16.9585 320.792C17.6285 321.461 18.3146 322.115 19.0168 322.751C19.7189 323.387 20.4362 324.006 21.1686 324.607C21.9011 325.208 22.6479 325.791 23.409 326.356C24.1701 326.92 24.9446 327.466 25.7325 327.992C26.5203 328.518 27.3207 329.025 28.1334 329.512C28.9462 330 29.7704 330.466 30.6061 330.913C31.4418 331.36 32.2879 331.786 33.1446 332.191C34.0012 332.596 34.8672 332.98 35.7426 333.343C36.6181 333.705 37.5019 334.046 38.3942 334.365C39.2864 334.685 40.1858 334.982 41.0924 335.257C41.9994 335.532 42.9123 335.784 43.8313 336.015C44.7507 336.245 45.675 336.452 46.6042 336.638C47.5334 336.822 48.4667 336.984 49.4042 337.123C50.3417 337.262 51.2818 337.378 52.225 337.471C53.1677 337.564 54.1124 337.634 55.0589 337.68C56.0054 337.727 56.9523 337.75 57.9 337.75L328.1 337.75C329.048 337.75 329.994 337.727 330.941 337.68C331.888 337.634 332.832 337.564 333.775 337.471C334.718 337.378 335.658 337.262 336.596 337.123C337.533 336.984 338.467 336.822 339.396 336.638C340.325 336.452 341.249 336.245 342.169 336.015C343.088 335.784 344.001 335.532 344.908 335.257C345.814 334.982 346.714 334.685 347.606 334.365C348.498 334.046 349.382 333.705 350.257 333.343C351.133 332.98 351.999 332.596 352.855 332.191C353.712 331.786 354.558 331.36 355.394 330.913C356.23 330.466 357.054 330 357.866 329.512C358.679 329.025 359.479 328.519 360.268 327.992C361.055 327.466 361.83 326.92 362.591 326.356C363.352 325.791 364.099 325.208 364.831 324.607C365.564 324.006 366.281 323.387 366.983 322.751C367.685 322.115 368.371 321.461 369.042 320.792C369.711 320.121 370.365 319.435 371.001 318.733C371.637 318.031 372.256 317.314 372.857 316.581C373.458 315.849 374.041 315.102 374.606 314.341C375.17 313.58 375.715 312.805 376.242 312.018C376.769 311.229 377.277 310.429 377.763 309.616C378.25 308.804 378.717 307.98 379.162 307.144C379.611 306.308 380.036 305.462 380.44 304.606C380.843 303.749 381.228 302.883 381.593 302.007C381.955 301.132 382.294 300.248 382.615 299.356C382.935 298.464 383.233 297.564 383.508 296.658C383.783 295.751 384.036 294.838 384.266 293.919C384.496 292.999 384.703 292.075 384.888 291.146C385.073 290.217 385.235 289.283 385.374 288.346C385.514 287.408 385.627 286.468 385.721 285.525C385.815 284.582 385.883 283.638 385.928 282.691C385.977 281.745 386 280.798 386 279.85L386 106.15C386 105.202 385.977 104.255 385.928 103.309C385.883 102.362 385.815 101.418 385.721 100.475C385.627 99.5318 385.514 98.5917 385.374 97.6542C385.235 96.7167 385.073 95.7834 384.888 94.8542C384.703 93.925 384.496 93.0007 384.266 92.0813C384.036 91.1623 383.783 90.2493 383.508 89.3424C383.233 88.4358 382.935 87.5364 382.615 86.6442C382.294 85.7518 381.955 84.868 381.593 83.9927C381.228 83.1171 380.843 82.2512 380.44 81.3947C380.036 80.538 379.611 79.6918 379.162 78.8559C378.717 78.0204 378.25 77.1962 377.763 76.3835C377.277 75.5708 376.769 74.7704 376.242 73.9823C375.715 73.1945 375.17 72.4201 374.606 71.6592C374.041 70.898 373.458 70.1511 372.857 69.4185C372.256 68.686 371.637 67.9688 371.001 67.2669C370.365 66.5648 369.711 65.8786 369.042 65.2084C368.371 64.5384 367.685 63.8853 366.983 63.249C366.281 62.6127 365.564 61.994 364.831 61.3928C364.099 60.7917 363.352 60.2088 362.591 59.6442C361.83 59.0797 361.055 58.5343 360.268 58.0078C359.479 57.4813 358.679 56.9746 357.866 56.4876C357.054 56.0003 356.23 55.5334 355.394 55.0868C354.558 54.64 353.712 54.214 352.855 53.8089C351.999 53.4038 351.133 53.02 350.257 52.6573C349.382 52.2947 348.498 51.9538 347.606 51.6347C346.714 51.3155 345.814 51.0183 344.908 50.7432C344.001 50.468 343.088 50.2153 342.169 49.9851C341.249 49.7549 340.325 49.5473 339.396 49.3624C338.467 49.1777 337.533 49.0157 336.596 48.8765C335.658 48.7375 334.718 48.6217 333.775 48.5289C332.832 48.436 331.888 48.3662 330.941 48.3197C329.994 48.2732 329.048 48.25 328.1 48.25ZM366.7 270.2C366.7 270.99 366.681 271.779 366.642 272.568C366.603 273.356 366.545 274.143 366.468 274.929C366.39 275.715 366.294 276.498 366.178 277.279C366.062 278.061 365.927 278.839 365.773 279.613C365.619 280.387 365.446 281.158 365.254 281.924C365.062 282.69 364.852 283.45 364.622 284.206C364.393 284.962 364.145 285.711 363.88 286.455C363.613 287.198 363.329 287.935 363.027 288.664C362.725 289.394 362.405 290.115 362.068 290.829C361.73 291.543 361.375 292.248 361.003 292.945C360.631 293.641 360.241 294.328 359.835 295.005C359.429 295.683 359.007 296.35 358.568 297.006C358.13 297.663 357.675 298.308 357.205 298.942C356.734 299.577 356.249 300.199 355.748 300.809C355.247 301.42 354.731 302.017 354.201 302.602C353.671 303.188 353.126 303.76 352.568 304.318C352.01 304.876 351.438 305.421 350.853 305.951C350.267 306.481 349.67 306.997 349.059 307.498C348.449 307.999 347.827 308.484 347.192 308.954C346.558 309.425 345.913 309.88 345.256 310.318C344.6 310.757 343.933 311.179 343.255 311.585C342.578 311.991 341.891 312.381 341.195 312.753C340.499 313.125 339.793 313.48 339.079 313.817C338.365 314.155 337.644 314.475 336.914 314.777C336.185 315.079 335.448 315.363 334.705 315.63C333.961 315.895 333.212 316.143 332.456 316.372C331.7 316.601 330.94 316.812 330.174 317.004C329.408 317.196 328.637 317.368 327.863 317.523C327.089 317.677 326.311 317.812 325.529 317.928C324.748 318.044 323.965 318.14 323.179 318.218C322.393 318.295 321.606 318.353 320.818 318.392C320.029 318.431 319.24 318.45 318.45 318.45L67.55 318.45C66.7603 318.45 65.9713 318.431 65.1823 318.392C64.3938 318.353 63.6067 318.295 62.8207 318.218C62.0348 318.14 61.2515 318.044 60.4701 317.928C59.689 317.812 58.9114 317.677 58.1367 317.523C57.3624 317.368 56.5923 317.196 55.8264 317.004C55.06 316.812 54.2993 316.602 53.5439 316.372C52.7881 316.143 52.0387 315.895 51.295 315.63C50.5517 315.363 49.8151 315.079 49.0857 314.777C48.3559 314.475 47.634 314.155 46.9205 313.818C46.2065 313.48 45.5012 313.125 44.805 312.753C44.1088 312.381 43.422 311.991 42.7446 311.585C42.0672 311.179 41.4004 310.757 40.7437 310.318C40.0871 309.88 39.4417 309.425 38.8073 308.954C38.1733 308.484 37.551 307.999 36.9405 307.498C36.3301 306.997 35.7324 306.481 35.1473 305.951C34.5622 305.421 33.9905 304.876 33.4321 304.318C32.8737 303.76 32.3294 303.188 31.7991 302.602C31.2688 302.017 30.7532 301.42 30.2523 300.809C29.7513 300.199 29.2656 299.577 28.7952 298.942C28.3248 298.308 27.8703 297.663 27.4316 297.006C26.9929 296.35 26.5706 295.683 26.1646 295.005C25.7586 294.328 25.3695 293.641 24.9973 292.945C24.6251 292.249 24.2701 291.543 23.9325 290.829C23.5949 290.115 23.275 289.394 22.9728 288.664C22.6706 287.935 22.3865 287.198 22.1205 286.455C21.8545 285.711 21.6068 284.962 21.3776 284.206C21.1484 283.45 20.9379 282.69 20.746 281.924C20.5541 281.158 20.3812 280.387 20.2271 279.613C20.0731 278.839 19.9381 278.061 19.8222 277.28C19.7064 276.498 19.6097 275.715 19.5323 274.929C19.455 274.143 19.3969 273.356 19.3581 272.568C19.3194 271.779 19.3 270.99 19.3 270.2L19.3 115.8C19.3 115.01 19.3194 114.221 19.3581 113.432C19.3969 112.644 19.455 111.857 19.5323 111.071C19.6097 110.285 19.7064 109.501 19.8222 108.72C19.9381 107.939 20.0731 107.161 20.2271 106.387C20.3812 105.612 20.5541 104.842 20.746 104.076C20.9379 103.31 21.1484 102.549 21.3776 101.794C21.6068 101.038 21.8545 100.289 22.1205 99.545C22.3865 98.8017 22.6706 98.0651 22.9728 97.3357C23.275 96.6059 23.5949 95.884 23.9325 95.1705C24.2701 94.4565 24.6251 93.7512 24.9973 93.055C25.3695 92.3588 25.7586 91.672 26.1646 90.9946C26.5706 90.3172 26.9929 89.6504 27.4316 88.9937C27.8703 88.3371 28.3248 87.6917 28.7952 87.0577C29.2656 86.4233 29.7513 85.801 30.2523 85.1906C30.7532 84.5802 31.2688 83.9824 31.7991 83.3971C32.3294 82.8121 32.8737 82.2403 33.4321 81.682C33.9905 81.1236 34.5622 80.5793 35.1473 80.049C35.7324 79.5187 36.3301 79.0032 36.9405 78.5024C37.551 78.0013 38.1733 77.5155 38.8073 77.0451C39.4417 76.5749 40.0871 76.1204 40.7437 75.6816C41.4004 75.2429 42.0672 74.8205 42.7446 74.4147C43.422 74.0086 44.1088 73.6194 44.805 73.2473C45.5012 72.8751 46.2065 72.5201 46.9205 72.1824C47.634 71.8449 48.3559 71.525 49.0857 71.2226C49.8151 70.9206 50.5517 70.6365 51.295 70.3704C52.0387 70.1045 52.7881 69.8569 53.5439 69.6278C54.2993 69.3986 55.06 69.188 55.8264 68.996C56.5923 68.8042 57.3624 68.6314 58.1367 68.4773C58.9114 68.323 59.689 68.1879 60.4704 68.0721C61.2515 67.9562 62.0348 67.8596 62.8207 67.7822C63.6067 67.7048 64.3938 67.6468 65.1823 67.608C65.9713 67.5693 66.7603 67.55 67.55 67.55L318.45 67.55C319.24 67.55 320.029 67.5693 320.818 67.608C321.606 67.6468 322.393 67.7048 323.179 67.7822C323.965 67.8596 324.748 67.9562 325.529 68.0721C326.311 68.1879 327.089 68.3229 327.863 68.4769C328.637 68.631 329.408 68.804 330.174 68.996C330.94 69.1877 331.7 69.3983 332.456 69.6278C333.212 69.8569 333.961 70.1045 334.705 70.3704C335.448 70.6365 336.185 70.9206 336.914 71.2226C337.644 71.525 338.365 71.8449 339.079 72.1824C339.793 72.5201 340.498 72.8751 341.195 73.2473C341.891 73.6194 342.578 74.0086 343.255 74.4147C343.933 74.8205 344.6 75.2429 345.256 75.6816C345.913 76.1204 346.558 76.5749 347.192 77.0451C347.827 77.5155 348.449 78.0013 349.059 78.5024C349.67 79.0032 350.267 79.5187 350.852 80.049C351.438 80.5793 352.01 81.1236 352.568 81.682C353.126 82.2403 353.671 82.8121 354.201 83.3971C354.731 83.9824 355.247 84.5802 355.748 85.1906C356.249 85.801 356.734 86.4233 357.204 87.0573C357.675 87.6917 358.13 88.3371 358.568 88.9937C359.007 89.6504 359.429 90.3172 359.835 90.9946C360.241 91.672 360.631 92.3588 361.003 93.055C361.375 93.7512 361.73 94.4565 362.068 95.1705C362.405 95.884 362.725 96.6059 363.027 97.3357C363.329 98.0651 363.613 98.8017 363.88 99.545C364.145 100.289 364.393 101.038 364.622 101.794C364.851 102.549 365.062 103.31 365.254 104.076C365.446 104.842 365.618 105.612 365.773 106.387C365.927 107.161 366.062 107.939 366.178 108.72C366.294 109.501 366.39 110.285 366.468 111.071C366.545 111.857 366.603 112.644 366.642 113.432C366.681 114.221 366.7 115.01 366.7 115.8L366.7 270.2ZM178.525 164.05L110.975 164.05C110.896 164.05 110.817 164.052 110.738 164.056C110.659 164.06 110.581 164.065 110.502 164.073C110.423 164.081 110.345 164.091 110.267 164.102C110.189 164.114 110.111 164.127 110.034 164.143C109.956 164.158 109.879 164.175 109.803 164.195C109.726 164.214 109.65 164.235 109.574 164.258C109.499 164.281 109.424 164.305 109.35 164.332C109.275 164.359 109.201 164.387 109.129 164.417C109.056 164.448 108.983 164.48 108.912 164.513C108.841 164.547 108.77 164.582 108.7 164.62C108.631 164.657 108.562 164.696 108.494 164.736C108.427 164.777 108.36 164.819 108.294 164.863C108.228 164.907 108.164 164.952 108.101 165C108.037 165.047 107.975 165.095 107.914 165.145C107.853 165.195 107.793 165.247 107.735 165.3C107.676 165.353 107.619 165.407 107.563 165.463C107.507 165.519 107.453 165.576 107.4 165.635C107.347 165.693 107.295 165.753 107.245 165.814C107.195 165.875 107.147 165.937 107.1 166.001C107.052 166.064 107.007 166.128 106.963 166.194C106.919 166.26 106.877 166.327 106.836 166.394C106.796 166.462 106.757 166.531 106.72 166.6C106.682 166.67 106.647 166.741 106.613 166.812C106.58 166.883 106.548 166.956 106.517 167.029C106.487 167.101 106.459 167.175 106.432 167.25C106.405 167.324 106.381 167.399 106.358 167.474C106.335 167.55 106.314 167.626 106.295 167.703C106.275 167.779 106.258 167.856 106.243 167.934C106.227 168.011 106.214 168.089 106.202 168.167C106.191 168.245 106.181 168.323 106.173 168.402C106.165 168.481 106.16 168.559 106.156 168.638C106.152 168.717 106.15 168.796 106.15 168.875L106.15 178.525C106.15 178.604 106.152 178.683 106.156 178.762C106.16 178.84 106.165 178.919 106.173 178.998C106.181 179.076 106.191 179.155 106.202 179.233C106.214 179.311 106.227 179.389 106.243 179.466C106.258 179.543 106.275 179.621 106.295 179.697C106.314 179.774 106.335 179.85 106.358 179.926C106.381 180.001 106.405 180.076 106.432 180.15C106.459 180.225 106.487 180.299 106.517 180.371C106.548 180.444 106.58 180.517 106.613 180.588C106.647 180.659 106.682 180.73 106.72 180.799C106.757 180.869 106.796 180.938 106.836 181.005C106.877 181.073 106.919 181.14 106.963 181.205C107.007 181.271 107.052 181.336 107.1 181.399C107.147 181.463 107.195 181.525 107.245 181.586C107.295 181.647 107.347 181.707 107.4 181.765C107.453 181.824 107.507 181.881 107.563 181.937C107.619 181.993 107.676 182.047 107.735 182.1C107.793 182.153 107.853 182.205 107.914 182.255C107.975 182.305 108.037 182.353 108.101 182.4C108.164 182.448 108.228 182.493 108.294 182.537C108.36 182.581 108.427 182.623 108.494 182.664C108.562 182.704 108.631 182.743 108.7 182.78C108.77 182.818 108.841 182.853 108.912 182.887C108.983 182.92 109.056 182.952 109.129 182.983C109.201 183.013 109.275 183.041 109.35 183.068C109.424 183.095 109.499 183.119 109.574 183.142C109.65 183.165 109.726 183.186 109.803 183.205C109.879 183.224 109.956 183.242 110.034 183.257C110.111 183.273 110.189 183.286 110.267 183.298C110.345 183.309 110.423 183.319 110.502 183.327C110.581 183.335 110.659 183.34 110.738 183.344C110.817 183.348 110.896 183.35 110.975 183.35L178.525 183.35C178.604 183.35 178.683 183.348 178.762 183.344C178.84 183.34 178.919 183.335 178.998 183.327C179.076 183.319 179.155 183.309 179.233 183.298C179.311 183.286 179.389 183.273 179.466 183.257C179.543 183.242 179.621 183.224 179.697 183.205C179.774 183.186 179.85 183.165 179.926 183.142C180.001 183.119 180.076 183.095 180.15 183.068C180.225 183.041 180.299 183.013 180.371 182.983C180.444 182.952 180.517 182.92 180.588 182.887C180.659 182.853 180.73 182.818 180.799 182.78C180.869 182.743 180.938 182.704 181.005 182.664C181.073 182.623 181.14 182.581 181.205 182.537C181.271 182.493 181.336 182.448 181.399 182.4C181.463 182.353 181.525 182.305 181.586 182.255C181.647 182.205 181.707 182.153 181.765 182.1C181.824 182.047 181.881 181.993 181.937 181.937C181.993 181.881 182.047 181.824 182.1 181.765C182.153 181.707 182.205 181.647 182.255 181.586C182.305 181.525 182.353 181.463 182.4 181.399C182.448 181.336 182.493 181.271 182.537 181.205C182.581 181.14 182.623 181.073 182.664 181.005C182.704 180.938 182.743 180.869 182.78 180.799C182.818 180.73 182.853 180.659 182.887 180.588C182.92 180.517 182.952 180.444 182.983 180.371C183.013 180.299 183.041 180.225 183.068 180.15C183.095 180.076 183.119 180.001 183.142 179.926C183.165 179.85 183.186 179.774 183.205 179.697C183.224 179.621 183.242 179.543 183.257 179.466C183.273 179.389 183.286 179.311 183.298 179.233C183.309 179.155 183.319 179.076 183.327 178.998C183.335 178.919 183.34 178.84 183.344 178.762C183.348 178.683 183.35 178.604 183.35 178.525L183.35 168.875C183.35 168.796 183.348 168.717 183.344 168.638C183.34 168.559 183.335 168.481 183.327 168.402C183.319 168.323 183.309 168.245 183.298 168.167C183.286 168.089 183.273 168.011 183.257 167.934C183.242 167.856 183.224 167.779 183.205 167.703C183.186 167.626 183.165 167.55 183.142 167.474C183.119 167.399 183.095 167.324 183.068 167.25C183.041 167.175 183.013 167.101 182.983 167.029C182.952 166.956 182.92 166.883 182.887 166.812C182.853 166.741 182.818 166.67 182.78 166.6C182.743 166.531 182.704 166.462 182.664 166.394C182.623 166.327 182.581 166.26 182.537 166.194C182.493 166.128 182.448 166.064 182.4 166.001C182.353 165.937 182.305 165.875 182.255 165.814C182.205 165.753 182.153 165.693 182.1 165.635C182.047 165.576 181.993 165.519 181.937 165.463C181.881 165.407 181.824 165.353 181.765 165.3C181.707 165.247 181.647 165.195 181.586 165.145C181.525 165.095 181.463 165.047 181.399 165C181.336 164.952 181.271 164.907 181.205 164.863C181.14 164.819 181.073 164.777 181.005 164.736C180.938 164.696 180.869 164.657 180.799 164.62C180.73 164.582 180.659 164.547 180.588 164.513C180.517 164.48 180.444 164.448 180.371 164.417C180.299 164.387 180.225 164.359 180.15 164.332C180.076 164.305 180.001 164.281 179.926 164.258C179.85 164.235 179.774 164.214 179.697 164.195C179.621 164.175 179.543 164.158 179.466 164.143C179.389 164.127 179.311 164.114 179.233 164.102C179.155 164.091 179.076 164.081 178.998 164.073C178.919 164.065 178.84 164.06 178.762 164.056C178.683 164.052 178.604 164.05 178.525 164.05Z");
            GetGateInfo();
        }

        private void InitPageEnd()
        {
            try
            {
                var gateOptions = appsettings.Node("gate");
                if (gateOptions == null)
                {
                    throw new Exception("配置文件错误，请检查\r\n错误代码：9000");
                }
                // 初始化硬件设备
                var open = gateUtil.OpenCom(gateOptions.Value<int>("com"));
                if (!open)
                {
                    throw new Exception("与闸机通讯失败，请重启闸机进行尝试\r\n错误代码：9001");
                }
                open = gateUtil.SetModel(gateOptions.Value<int>("workType"));
                if (!open)
                {
                    throw new Exception("与闸机通讯失败，请重启闸机进行尝试\r\n错误代码：9002");
                }
                open = gateUtil.SetDirection(gateOptions.Value<string>("direction") == "left" ? 1 : 2);
                if (!open)
                {
                    throw new Exception("与闸机通讯失败，请重启闸机进行尝试\r\n错误代码：9003");
                }
                int timeout = gateOptions.Value<int>("timeout");
                open = gateUtil.SetTimeout(Math.Max(10, timeout));
                if (!open)
                {
                    throw new Exception("与闸机通讯失败，请重启闸机进行尝试\r\n错误代码：9004");
                }
                gateUtil.handler += GateUtil_handler;

                // 身份证
                if (gateOptions.Value<bool>("enableCert"))
                {
                    var error = certUtil.Register(CertCheck);
                    if (!string.IsNullOrEmpty(error))
                    {
                        throw new Exception($"与身份证读卡设备通讯失败\r\n{error}\r\n错误代码：9005");
                    }
                }

                if (gateOptions.Value<bool>("enableQr"))
                {
                    // 扫码器
                    var error = qrUtil.Register(gateOptions.Value<int>("qrCom"), QrCheck);
                    if (!string.IsNullOrEmpty(error))
                    {
                        throw new Exception($"与扫码设备通讯失败\r\n{error}\r\n错误代码：9006");
                    }
                }

            }
            catch (Exception ex)
            {
                logger.Error(ex);
                LeftTopText = ex.Message;
                StartBg = Util.ToColor("#F9D3DD");
                EndBg = Util.ToColor("#E54E63");
                ThemeBg = Util.ToBrush("#D9001B");
                Title = "初始化失败";
                return;
            }

            WeakReferenceMessenger.Default.Register<CheckMessage>(this, CheckChange);
            ChangeVersionText();
            Quartzer.CreateJob(this, nameof(ChangeVersionText), 10, ChangeVersionText);

            ChangePage1();
        }


        private GateDb? GateDb { get; set; }
        // 更新闸机信息，触发间隔一分钟
        private void GetGateInfo()
        {
            var api = appsettings.Node("api")!.Value<string>("getGateInfo");
            var args = new
            {
                code = GateCode,
                password = GatePassword,
            };
            Quartzer.CreateJob(this, nameof(GetGateInfo), 60, true, async () =>
            {
                Quartzer.Lock(nameof(GetGateInfo));
                var response = await Util.UseHttpJson(api, args);
                if (response.Success)
                {
                    GateDb = response.GetData<JToken>()?.Value<JToken>("data")?.ToObject<GateDb>();
                    if (CurrPageCode == PageCode.NetworkError)
                    {
                        ChangePage1();
                    }
                    if (CurrPageCode == PageCode.Init)
                    {
                        InitPageEnd();
                    }
                    LoadCacheTicket();
                }
                else if (CurrPageCode == PageCode.Init)
                {
                    Title = "初始化失败，正在重试";
                }
                else
                {
                    ChangePage4();
                }
                Quartzer.Unlock(nameof(GetGateInfo));
            });
        }
        // 加载缓存票
        private async void LoadCacheTicket()
        {
            var firstTask = GateDb?.GateinTask?.shipTaskList?.FirstOrDefault();
            if (firstTask != null)
            {
                var response = await Util.UseHttpJson(appsettings.Node("api").Value<string>("getFightAllTicketInfo"), new
                {
                    code = GateCode,
                    password = GatePassword,
                    flightCode = firstTask.flightCode,
                });
                if (response.Success)
                {
                    var data = response.GetData<JObject>();
                    if (data.Value<bool>("isSuccess"))
                    {
                        GateDb.GateinTask.TicketInfos = data.Value<JArray>("data").ToObject<List<TicketInfo>>();
                    }
                }
            }
            ChangeLeftTopText();
        }
        #endregion

        #region 验票

        private void QrCheck(string content)
        {
            if (string.IsNullOrEmpty(content) || GateDb == null)
            {
                return;
            }
            WeakReferenceMessenger.Default.Send(new CheckMessage(new GateInDto()
            {
                ticketKind = GateDb.GetAreaType(),
                code = GateCode,
                password = GatePassword,
                faceVerify = null,
                qrCode = content,
            }));
        }

        void CertCheck(string content)
        {
            if (string.IsNullOrEmpty(content) || GateDb == null)
            {
                return;
            }

            var cacheTicket = GateDb.GateinTask?.Check(content);
            if (cacheTicket != null)
            {
                if (cacheTicket.isNeedFaceVerify == "true")
                {
                    //TODO 需要人脸验证
                }

            }
            WeakReferenceMessenger.Default.Send(new CheckMessage(new GateInDto()
            {
                ticketKind = GateDb.GetAreaType(),
                code = GateCode,
                password = GatePassword,
                idcard = content,
            }));
        }

        private async void CheckChange(object recipient, CheckMessage message)
        {
            if (CurrPageCode == PageCode.Success || GateDb == null)
            {
                return;
            }
            var args = message.Value;
            if (args.ticketKind == "3")
            {
                args.spotId = GateDb.GetSpotId();
            }
            else
            {
                var current = GateDb.CurrentShipTask();
                args.shipId = current?.shipId;
                args.flightId = current?.flightId;
                args.flightShipCode = current?.flightShipCode;
                if (GateDb.GateinTask?.GetCurrentTicketInfo()?.isNeedFaceVerify == "true")
                {
                    args.faceVerify = true;
                }
                else
                {
                    args.faceVerify = null;
                }
            }

            var api = appsettings.Node("api").Value<string>("gateIn");
            Title = "检票中";
            IconRunning = true;
            var response = await Util.UseHttpJson(api, message.Value);
            IconRunning = false;
            Title = "请检票";

            if (response.Success)
            {
                var data = response.GetData<JObject>();
                if (data?.Value<bool>("isSuccess") == true)
                {
                    var gateData = data?.Value<JObject>("data");
                    var kindName = gateData?.Value<string>("nameZhcn");
                    var msg = data?.Value<string>("msg");
                    OpenGate(1);
                    ChangePage2(kindName, msg);
                }
                else
                {
                    var msg = data?.Value<string>("msg");
                    if (string.IsNullOrEmpty(msg) || msg?.Length > 8)
                    {
                        ChangePage3("验票失败", msg);
                    }
                    else
                    {
                        ChangePage3(msg, null);
                    }
                }
            }
            else
            {
                ChangePage3("验票失败", "网络出现错误");
            }
        }

        private void OpenGate(int number)
        {
            gateUtil.SetIntimes(number);
        }

        // 过闸回调
        private void GateUtil_handler(PassResult passResult)
        {
            logger.Info("gate callback" + passResult.ToString());

            // 正向过一人
            if (passResult == PassResult.LPass)
            {
                ChangePage1();
                // TODO 判断船票后验票
            }
            // 正向过闸失败
            else if (passResult == PassResult.LFail)
            {
                ChangePage1();
            }
        }



        #endregion

        #region 切换页面

        // 更新右下角信息，触发间隔10秒
        private void ChangeVersionText()
        {
            var date = DateTime.Now.ToString("HH:mm");
            var spotName = GateDb?.GetSpotName();
            var code = appsettings.Node("account")?.Value<string>("code");
            RightBottomText = $" {spotName} {code} {date} {appsettings.Version}";
        }

        private void ChangeLeftTopText()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append(appsettings.Node("view")!.Value<string>("leftTopFormat"));
            var firstShip = GateDb?.GateinTask?.shipTaskList?.FirstOrDefault();
            if (firstShip != null)
            {
                var dic = JsonConvert.DeserializeObject<Dictionary<string, object>>(JsonConvert.SerializeObject(firstShip));
                foreach (var item in dic!)
                {
                    sb.Replace("{" + item.Key + "}", item.Value?.ToString() ?? "");
                }
                LeftTopText = sb.ToString();
            }
            else
            {
                LeftTopText = "";
            }
        }


        private PageCode CurrPageCode = PageCode.WaitCheck;

        /// <summary>
        /// 请检票
        /// </summary>
        void ChangePage1()
        {
            DispatcherHelper.CheckBeginInvokeOnUI(() =>
            {
                Title = "请检票";
                IconRunning = false;
                CurrPageCode = PageCode.WaitCheck;
                ChangeLeftTopText();
                StartBg = Util.ToColor("#CBE8FC");
                EndBg = Util.ToColor("#3BB9F3");
                ThemeBg = Util.ToBrush("#02A7F0");
                ThemeIcon = Geometry.Parse("M355.603 177.39C356.118 177.897 356.619 178.415 357.112 178.942C357.605 179.47 358.086 180.008 358.556 180.556C359.026 181.104 359.487 181.662 359.935 182.228C360.382 182.795 360.816 183.371 361.241 183.956C361.663 184.541 362.074 185.134 362.474 185.736C362.873 186.338 363.259 186.948 363.633 187.566C364.008 188.183 364.368 188.809 364.714 189.441C365.063 190.074 365.398 190.714 365.719 191.36C366.04 192.007 366.346 192.66 366.642 193.319C366.937 193.978 367.216 194.643 367.483 195.314C367.751 195.985 368.004 196.661 368.243 197.343C368.483 198.024 368.705 198.71 368.916 199.401C369.127 200.091 369.321 200.786 369.504 201.485C369.687 202.183 369.853 202.885 370.005 203.591C370.157 204.297 370.295 205.005 370.419 205.717C370.543 206.428 370.653 207.141 370.745 207.857C370.838 208.573 370.917 209.29 370.982 210.01C371.047 210.729 371.094 211.449 371.128 212.17C371.162 212.891 371.182 213.612 371.184 214.334C371.19 215.056 371.179 215.778 371.154 216.499C371.128 217.221 371.089 217.941 371.033 218.661C370.979 219.381 370.909 220.099 370.821 220.816C370.737 221.533 370.638 222.248 370.523 222.961C370.408 223.673 370.278 224.383 370.135 225.091C369.991 225.798 369.831 226.502 369.659 227.203C369.485 227.904 369.296 228.601 369.096 229.294C368.893 229.987 368.677 230.676 368.446 231.36C368.215 232.044 367.97 232.723 367.711 233.397C367.452 234.071 367.179 234.74 366.895 235.402C366.608 236.065 366.307 236.722 365.995 237.372C365.682 238.022 365.353 238.666 365.012 239.303C364.672 239.94 364.32 240.569 363.954 241.191L394.598 271.328C397.157 273.848 396.951 280.364 392.738 284.515C388.761 288.416 382.656 288.83 379.817 286.765L379.324 286.346L349.603 257.127C328.615 272.69 298.767 271.106 279.759 252.327C258.913 231.73 258.997 198.257 279.939 177.57C300.881 156.87 334.756 156.792 355.603 177.39ZM65.2941 0C65.1224 0.94849 65.0222 1.90446 64.9938 2.86791C64.9938 13.9675 74.258 22.9552 85.6778 22.9552C97.0977 22.9552 106.356 13.9615 106.356 2.86791C106.332 1.90793 106.236 0.947967 106.062 0L348.612 0C361.671 0 372.251 10.2776 372.251 22.9552L372.251 146.659L354.523 146.659L354.523 28.6971C354.523 22.3552 349.237 17.2194 342.705 17.2194L121.132 17.2194C115.164 31.115 101.18 40.1746 85.6778 40.1746C70.1694 40.1746 56.1858 31.115 50.2239 17.2194L29.546 17.2194C23.0195 17.2194 17.724 22.3552 17.724 28.6971L17.724 235.294C17.724 241.636 23.0195 246.771 29.546 246.771L50.2239 246.771C56.1858 232.876 70.1694 223.816 85.6778 223.816C101.18 223.816 115.164 232.876 121.132 246.771L252.164 246.771L252.164 263.991L106.062 263.991C106.23 263.043 106.332 262.083 106.362 261.123C106.362 250.023 97.0977 241.035 85.6778 241.035C74.258 241.035 64.9938 250.029 64.9938 261.123C65.0239 262.083 65.1199 263.043 65.2941 263.991L23.638 263.991C10.5791 263.991 0 253.713 0 241.035L0 22.9552C0 10.2776 10.5791 0 23.638 0L65.2941 0ZM292.516 189.995C278.558 203.795 278.504 226.102 292.398 239.836C306.302 253.539 328.871 253.485 342.837 239.715C356.802 225.916 356.856 203.609 342.958 189.875C329.065 176.148 306.482 176.196 292.522 189.995L292.516 189.995ZM94.5398 143.473L94.5398 200.861L76.8158 200.861L76.8158 143.473L94.5398 143.473ZM252.164 154.95L252.164 177.906L171.35 177.906L171.35 154.95L252.17 154.95L252.164 154.95ZM94.5398 63.1296L94.5398 120.518L76.8158 120.518L76.8158 63.1296L94.5398 63.1296ZM313.166 86.085L313.166 109.04L171.35 109.04L171.35 86.085L313.166 86.085Z");
            });
        }

        /// <summary>
        /// 验票成功
        /// </summary>
        void ChangePage2(string title, string subtitle)
        {
            DispatcherHelper.CheckBeginInvokeOnUI(() =>
            {
                Title = title;
                IconRunning = true;
                LeftTopText = subtitle;
                CurrPageCode = PageCode.Success;
                StartBg = Util.ToColor("#E3F2ED");
                EndBg = Util.ToColor("#7ADDAE");
                ThemeBg = Util.ToBrush("#3DD089");
                ThemeIcon = Geometry.Parse("M363.3 170.2L500.9 283.2C511.5 292.2 511.5 305.8 500.9 314.8C490.3 323.8 474.4 323.8 463.9 314.8L368.6 238L368.6 554.5C368.6 568.1 358 577.1 342.1 577.1C326.2 577.1 315.6 568.1 315.6 554.5L315.6 238L220.4 319.4C209.8 323.9 193.9 323.9 183.4 314.9C172.8 305.9 172.8 292.3 183.4 283.3L315.7 170.3C321 165.6 342.2 147.6 363.3 170.2Z");
            });
        }

        /// <summary>
        /// 验票失败
        /// </summary>
        /// <param name="title"></param>
        /// <param name="subtitle"></param>
        async void ChangePage3(string title, string subtitle)
        {
            DispatcherHelper.CheckBeginInvokeOnUI(() =>
            {
                Title = title;
                IconRunning = false;
                CurrPageCode = PageCode.CheckFail;
                LeftTopText = subtitle;
                StartBg = Util.ToColor("#F9D3DD");
                EndBg = Util.ToColor("#E54E63");
                ThemeBg = Util.ToBrush("#D9001B");
                ThemeIcon = Geometry.Parse("M304.147 267.811L196.347 157.511L304.147 47.2108C316.447 37.3109 317.747 20.3109 307.047 9.11086C296.347 -2.08916 277.647 -3.08916 265.347 6.81085L157.147 117.411L48.9468 6.81085C36.6468 -3.08916 17.9468 -2.08916 7.24681 9.11086C-3.4532 20.3109 -2.1532 37.3109 10.1468 47.2108L117.947 157.511L10.1468 267.811C-2.1532 277.711 -3.4532 294.811 7.24681 305.911C17.9468 317.111 36.6468 318.111 48.9468 308.211L157.147 197.611L265.247 308.211C277.547 318.111 296.247 317.111 306.947 305.911C317.747 294.811 316.447 277.711 304.147 267.811Z");
            });

            await Quartzer.Remove(nameof(ChangePage3));
            Quartzer.Once(this, nameof(ChangePage3), 3, () =>
            {
                if (CurrPageCode == PageCode.CheckFail)
                {
                    ChangePage1();
                }
            });
        }

        /// <summary>
        /// 网络异常
        /// </summary>
        void ChangePage4()
        {
            DispatcherHelper.CheckBeginInvokeOnUI(() =>
            {
                Title = "网络异常";
                IconRunning = false;
                CurrPageCode = PageCode.NetworkError;
                LeftTopText = "";
                StartBg = Util.ToColor("#FDE6E4");
                EndBg = Util.ToColor("#F29772");
                ThemeBg = Util.ToBrush("#EC6B32");
                ThemeIcon = Geometry.Parse("M241.848 278.2C267.448 278.2 288.248 299 288.248 324.6C288.248 350.2 267.448 371 241.848 371C216.248 371 195.448 350.2 195.448 324.6C195.448 299 216.248 278.2 241.848 278.2ZM111.648 23.2L384.948 296.5C394.148 305.4 394.448 320.1 385.548 329.3C376.648 338.5 361.948 338.8 352.748 329.9C352.548 329.7 352.348 329.5 352.148 329.3L78.8476 55.9C69.8476 46.8 69.8476 32.1 78.8476 23.1C87.9476 14.1 102.648 14.1 111.648 23.2ZM152.148 148.9L192.448 189.2C162.748 199.7 137.348 220.3 116.348 251L87.3476 234.7C78.5476 229.9 75.2476 218.9 80.0476 210.1C80.5476 209.1 81.1476 208.2 81.8476 207.3C102.648 181.6 126.048 162.1 152.148 148.9ZM242.948 128.1C314.348 128.1 372.148 160.2 416.248 224.5L384.048 242.1C375.748 246.7 365.348 244.7 359.248 237.3C344.148 218.6 326.948 204.5 307.648 195.1L240.548 128.1L242.948 128.1ZM62.7476 59.5L103.348 100.1C80.7476 117.2 59.6476 139.1 39.9476 165.7L9.74757 149.2C0.847565 144.5 -2.55244 133.5 2.04757 124.7C2.44756 124 2.84756 123.2 3.34756 122.6C20.2476 98.9 40.1476 77.7 62.7476 59.5ZM243.348 0C351.148 0 434.948 46.5 494.748 139.5L460.648 157.9C452.448 162.4 442.148 160.4 436.148 153.3C382.248 88.2 318.048 55.1 243.448 53.8C220.448 53.3 197.548 56.4 175.548 62.9L132.248 19.6C165.848 6.5 202.848 0 243.348 0Z");
            });
        }
        #endregion

    }
}

enum PageCode
{
    Init,
    WaitCheck,
    CheckFail,
    Success,
    NetworkError
}

